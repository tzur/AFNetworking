// Copyright (c) 2017 Lightricks. All rights reserved.
// Created by Amit Goldstein.

#import "LTColorTransferProcessor+OptimalRotations.h"

NS_ASSUME_NONNULL_BEGIN

@implementation LTColorTransferProcessor (OptimalRotations)

static const std::array<float, 50 * 9> kOptimalRotations = {{
   1.000000,  0.000000,  0.000000,  0.000000,  1.000000,  0.000000,  0.000000,  0.000000,  1.000000,
  -0.333333,  0.666667, -0.666667,  0.666667, -0.333333, -0.666667, -0.666667, -0.666667, -0.333333,
  -0.57735 , -0.57735 ,  0.57735 , -0.211325, -0.577351, -0.788675,  0.788675, -0.57735 ,  0.211325,
  -0.474484,  0.192263, -0.859011,  0.408249, -0.816496, -0.408248, -0.779871, -0.544397,  0.308923,
  -0.780935, -0.313619, -0.54017 ,  0.304876, -0.946182,  0.10858 , -0.545152, -0.079891,  0.834522,
  -0.926299,  0.124164, -0.355744,  0.2456  , -0.517047, -0.819965, -0.285747, -0.846904,  0.448445,
  -0.925057,  0.310561,  0.218679,  0.061753, -0.445103,  0.893348,  0.374774,  0.839902,  0.392568,
  -0.875593, -0.020039,  0.482633, -0.436572, -0.394792, -0.808421,  0.20674 , -0.918552,  0.336929,
  -0.409933,  0.305374,  0.859478,  0.731656, -0.452568,  0.509766,  0.544642,  0.837812, -0.037906,
  -0.864129, -0.42108 , -0.275631, -0.151112, -0.30532 ,  0.940183, -0.480048,  0.854091,  0.200206,
  -0.037241,  0.893516,  0.447485, -0.775106, -0.308463,  0.551418,  0.630733, -0.326313,  0.704057,
  -0.340452, -0.138035, -0.930075,  0.799858, -0.562512, -0.209302, -0.494287, -0.815185,  0.301917,
  -0.218248,  0.700512,  0.679449, -0.024753, -0.699982,  0.713731,  0.975579,  0.138952,  0.170109,
  -0.500586, -0.327453,  0.801367,  0.664408, -0.738752,  0.113166,  0.554955,  0.589084,  0.587371,
  -0.94244 ,  0.139148,  0.304046, -0.189864, -0.971186, -0.144048,  0.275242, -0.193484,  0.941704,
  -0.466045,  0.808383, -0.359609, -0.878412, -0.471364,  0.078799, -0.105807,  0.352608,  0.929770,
  -0.751672, -0.137061, -0.645138, -0.336297, -0.761804,  0.553678, -0.567356,  0.633142,  0.526534,
  -0.275576,  0.005194,  0.961265,  0.89476 , -0.364134,  0.258478,  0.351372,  0.931332,  0.095699,
  -0.3872  ,  0.572414, -0.722785, -0.920948, -0.202759,  0.332781,  0.043937,  0.794501,  0.605672,
  -0.605659, -0.184154, -0.774122,  0.79125 , -0.242404, -0.561395, -0.084268, -0.952538,  0.292526,
  -0.896272,  0.443171, -0.017217, -0.345335, -0.721713, -0.599896, -0.278283, -0.531724,  0.799893,
  -0.77771 , -0.627429, -0.038731,  0.073212, -0.151596,  0.985727, -0.624346,  0.763774,  0.163833,
  -0.752964,  0.081548, -0.65299 , -0.652431, -0.222038,  0.724591, -0.0859  ,  0.971622,  0.220391,
  -0.976587, -0.19933 ,  0.0809  ,  0.035752, -0.521227, -0.852669,  0.21213 , -0.829813,  0.51615 ,
  -0.599198,  0.606377, -0.522751, -0.598892, -0.772814, -0.20997 , -0.53131 ,  0.187258,  0.826223,
  -0.889327, -0.180867, -0.419982,  0.437683, -0.602638, -0.667279, -0.132408, -0.777248,  0.615104,
  -0.963285,  0.26538 ,  0.04068 , -0.093175, -0.188343, -0.977673, -0.251793, -0.945569,  0.206155,
  -0.488806, -0.002035, -0.87239 , -0.800732, -0.395863,  0.449579, -0.346262,  0.918307,  0.191870,
  -0.68521 , -0.586932, -0.431275,  0.728287, -0.544614, -0.415924,  0.00924 , -0.599088,  0.800630,
  -0.885293,  0.274999, -0.375008, -0.440172, -0.235396,  0.866509,  0.150014,  0.932183,  0.329441,
  -0.499147,  0.838382, -0.219017, -0.150241, -0.332661, -0.931002, -0.853393, -0.431802,  0.292006,
  -0.570738,  0.512497,  0.641564,  0.497046, -0.406289,  0.766729,  0.653607,  0.756489, -0.022850,
  -0.773739,  0.633294,  0.016308, -0.446324, -0.526675, -0.72347 , -0.44958 , -0.567055,  0.690164,
  -0.072432,  0.982531, -0.171427, -0.950445, -0.120099, -0.28676 , -0.302339,  0.142161,  0.942540,
  -0.529605,  0.554033, -0.642313, -0.799574, -0.073256,  0.596083,  0.283197,  0.829265,  0.481787,
  -0.944348, -0.328132,  0.02317 ,  0.277497, -0.832482, -0.479551,  0.176644, -0.446433,  0.877208,
  -0.822908,  0.320829,  0.468926, -0.081794, -0.883616,  0.461012,  0.562257,  0.341015,  0.753377,
  -0.097414,  0.461733,  0.881653,  0.772583, -0.523362,  0.359455,  0.627397,  0.716166, -0.305744,
  -0.241587, -0.146079,  0.959321, -0.904828, -0.323276, -0.27709 ,  0.350602, -0.934962, -0.054077,
  -0.67749 ,  0.121521, -0.725424, -0.18419 , -0.982863,  0.007373, -0.712096,  0.138611,  0.688263,
  -0.132967, -0.687154, -0.71424 ,  0.98257 ,  0.003065, -0.18587 ,  0.12991 , -0.726505,  0.674769,
  -0.694669,  0.681864,  0.229122, -0.286927,  0.029427, -0.9575  , -0.659627, -0.730887,  0.175203,
  -0.870073,  0.069341, -0.488021,  0.169348, -0.887742, -0.428059, -0.462918, -0.455088,  0.760658,
  -0.354359,  0.874309, -0.331684, -0.618928,  0.046595,  0.784064,  0.700969,  0.483129,  0.524623,
  -0.012571,  0.2749  , -0.961391,  0.893611, -0.428323, -0.13416 , -0.448667, -0.860795, -0.240269,
  -0.25337 , -0.701829,  0.665763,  0.96694 , -0.163243,  0.195903, -0.028809,  0.693389,  0.719987,
  -0.59509 ,  0.803108, -0.029761, -0.723073, -0.518888,  0.455984,  0.350761,  0.292871,  0.889490,
  -0.420586,  0.398695,  0.814954, -0.818943, -0.553406, -0.151905,  0.390436, -0.73129 ,  0.559263,
  -0.932096, -0.045652,  0.359322, -0.054552, -0.963017, -0.263861,  0.358079, -0.265545,  0.895134,
  -0.923427,  0.353549, -0.149282,  0.089157, -0.18071 , -0.979487, -0.373273, -0.917795,  0.135351
}};

- (const std::vector<const cv::Mat1f>)optimalRotations {
  static std::vector<const cv::Mat1f> rotations;
  static dispatch_once_t onceToken;
  dispatch_once(&onceToken, ^{
    for (NSUInteger i = 0; i < kOptimalRotations.size() / 9; ++i) {
      cv::Mat1f rotation(3, 3, 0.);
      for (NSUInteger j = 0; j < rotation.total(); ++j) {
        *(rotation.begin() + j) = kOptimalRotations[i * rotation.total() + j];
      }
      rotations.push_back(rotation);
    }
  });

  return rotations;
}

@end

NS_ASSUME_NONNULL_END
