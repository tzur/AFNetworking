// Copyright (c) 2017 Lightricks. All rights reserved.
// Created by Amit Goldstein.

NS_ASSUME_NONNULL_BEGIN

@class LT3DLUT;

/// Processor calculating 3D lookup tables that map the color palette of an input image to the color
/// palette of a reference image. This can be used to match the appearance of two images when
/// combining them, or to create unique filters that are "adaptive", since the lookup table is
/// generated based on the input, rather than being fixed.
///
/// @note This processor creates multiple buffers and compute states for its process and is meant to
/// be used by continuously calling \c segmentWithInput:output:completion: without reinitialization
/// of a new processor at each call. Consecutive calls result in faster processing.
@interface PNKColorTransferProcessor : NSObject

- (instancetype)init NS_UNAVAILABLE;

/// Initializes with the given sizes of input and reference that will be provided. Returns \c nil
/// when initialized on a simulator or an unsupported GPU.
- (nullable instancetype)initWithInputSize:(CGSize)inputSize referenceSize:(CGSize)referenceSize
    NS_DESIGNATED_INITIALIZER;

/// Returns a 3D lookup table that can be used to map the current \c input's color palette to the
/// current \c reference's palette.
///
/// @important Both \c input and \c reference must be non-premultiplied RGBA and Metal compatiable.
/// Supported pixel formats are <tt>kCVPixelFormatType_32BGRA, kCVPixelFormatType_64RGBAHalf</tt>.
- (nullable LT3DLUT *)lutForInput:(CVPixelBufferRef)input reference:(CVPixelBufferRef)reference;

/// Size of the input whose color palette is the source of the mapping lookup table generated by
/// \c processLUT.
@property (readonly, nonatomic) CGSize inputSize;

/// Size of the reference whose color palette is the target of the mapping lookup table generated by
/// \c processLUT.
@property (readonly, nonatomic) CGSize referenceSize;

/// Recommended number of pixels for both \c input and \reference for optimal combination of
/// results quality and running time.
@property (class, readonly, nonatomic) NSUInteger recommendedNumberOfPixels;

/// Number of iterations to run, higher number increases the quality of results and running time.
/// Must be in range <tt>[0, 50]</tt>, default is \c 20.
@property (nonatomic) NSUInteger iterations;
LTPropertyDeclare(NSUInteger, iterations, Iterations);

/// Number of histogram bins used for the color transfer. Must be in range <tt>[2, 255]</tt>,
/// default is \c 32.
@property (nonatomic) NSUInteger histogramBins;
LTPropertyDeclare(NSUInteger, histogramBins, HistogramBins);

/// Damping factor for progress of each iteration towards the reference. Lower values yield smaller
/// steps towards the reference's palette in each iteration, but increase the chance of convergence.
/// Must be in range <tt>[0, 1]</tt>, default is \c 0.2.
@property (nonatomic) float dampingFactor;
LTPropertyDeclare(float, dampingFactor, DampingFactor);

@end

NS_ASSUME_NONNULL_END
