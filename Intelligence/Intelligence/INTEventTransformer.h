// Copyright (c) 2017 Lightricks. All rights reserved.
// Created by Boris Talesnik.

#import "INTTransformerBlock.h"

NS_ASSUME_NONNULL_BEGIN

/// Transformer of events to aggregated events using \c INTTransformerBlock blocks.
///
/// A. Initialize empty aggregated data dictionary for each transformer.
/// B. When a new input event is processed:
///   - For each transformer:
///     - Run the transformer with the event, the aggregated data returned by its previous
///       execution, the provided application context and event metadata.
///     - Store the aggregated data for the next process.
///   - Return all the output events that were generated by executing all of the transformers in
///     this round.
///
/// Application context is a dictionary, containing aggregated contextual data of the application
/// execution, under which the event was created. Event metadata is an \c INTEventMetadata created
/// with the input event.
@interface INTEventTransformer : NSObject

- (instancetype)init NS_UNAVAILABLE;

/// Initializes with \c transformerBlocks that are executed for each input event that is being
/// processed by the receiver.
- (instancetype)initWithTransformerBlocks:
    (const std::vector<INTTransformerBlock> &)transformerBlocks NS_DESIGNATED_INITIALIZER;

/// Processes and aggregates data from an input \c event into an output event. \c metadata is the
/// metadata created with \c event. \c appContext is the application context upon reporting
/// \c event. \c event, \c metadata and \c appContext are passed to each transformer block for
/// processing. Returns all high level events generated by the transformer blocks after processing
/// \c event.
- (NSArray *)processEvent:(id)event metadata:(INTEventMetadata *)metadata
               appContext:(INTAppContext *)appContext;

@end

NS_ASSUME_NONNULL_END
